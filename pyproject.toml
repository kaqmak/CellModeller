[project]
name = "CellModeller"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.11.2"
dependencies = [
    "numpy>=2.2.0",
    "pyopencl>=2024.3",
    "pyopengl>=3.1.7",
    "pyqt5>=5.15.11",
    "python-libsbml>=5.20.4",
    "scipy>=1.14.1",
]

[dependency-groups]
dev = ["ruff>=0.8.2"]

[tool.pyright]
venvPath = "."
venv = ".venv"
pythonVersion = "3.12"
typeCheckingMode = "basic"

[tool.ruff]
line-length = 100
target-version = "py312"
exclude = [".venv", "notebooks"]

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 100

[tool.ruff.lint]
select = [
    "ANN001", # flake8-annotations
    "ANN201", # flake8-annotations
    "B",      # flake8-bugbear
    "C90",    # mccabe complexity
    "E",      # pycodestyle
    "F",      # pyflakes
    # "I",      # isort
    "PD",     # pandas-vet
    "RUF100", # unused noqa directive
    "S",      # flake8-bandit
]
fixable = ["A", "B", "C", "D", "E", "F", "I"]
unfixable = []
ignore = ["E501"] # Avoid enforcing line-length violations

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.lint.isort]
known-first-party = ["CellModeller"]


[tool.ruff.lint.per-file-ignores]
# Ignore unused imports in __init__.py files.
"**/__init__.py" = ["F401"]
# asserts are ACTUALLY allowed in tests :)
"**/tests/**" = ["S101"]
